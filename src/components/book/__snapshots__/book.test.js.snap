exports[`test Renderiza sem erros 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="book">
    <div
        className="book-top">
        <div
            className="book-cover"
            style={
                Object {
                    "backgroundImage": "url()",
                  }
            } />
        <div
            className="book-shelf-changer">
            <select
                onChange={[Function]}
                value="none">
                <option
                    disabled={true}
                    value="none">
                    Move to...
                </option>
                <option
                    value="currentlyReading">
                    Currently Reading
                </option>
                <option
                    value="wantToRead">
                    Want to Read
                </option>
                <option
                    value="read">
                    Read
                </option>
                <option
                    value="none">
                    None
                </option>
            </select>
        </div>
    </div>
    <div
        className="book-title" />
    <div
        className="book-authors" />
</div>,
  "nodes": Array [
    <div
      className="book">
      <div
            className="book-top">
            <div
                  className="book-cover"
                  style={
                        Object {
                              "backgroundImage": "url()",
                            }
                  } />
            <div
                  className="book-shelf-changer">
                  <select
                        onChange={[Function]}
                        value="none">
                        <option
                              disabled={true}
                              value="none">
                              Move to...
                        </option>
                        <option
                              value="currentlyReading">
                              Currently Reading
                        </option>
                        <option
                              value="wantToRead">
                              Want to Read
                        </option>
                        <option
                              value="read">
                              Read
                        </option>
                        <option
                              value="none">
                              None
                        </option>
                  </select>
            </div>
      </div>
      <div
            className="book-title" />
      <div
            className="book-authors" />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Book
        book={
                Object {
                        "imageLinks": Object {
                          "thumbnail": "",
                        },
                        "subtitle": "",
                        "title": "",
                      }
        }
        updateShelfBook={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "book": Object {
            "imageLinks": Object {
              "thumbnail": "",
            },
            "subtitle": "",
            "title": "",
          },
          "updateShelfBook": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="book">
          <div
                    className="book-top">
                    <div
                              className="book-cover"
                              style={
                                        Object {
                                                  "backgroundImage": "url()",
                                                }
                              } />
                    <div
                              className="book-shelf-changer">
                              <select
                                        onChange={[Function]}
                                        value="none">
                                        <option
                                                  disabled={true}
                                                  value="none">
                                                  Move to...
                                        </option>
                                        <option
                                                  value="currentlyReading">
                                                  Currently Reading
                                        </option>
                                        <option
                                                  value="wantToRead">
                                                  Want to Read
                                        </option>
                                        <option
                                                  value="read">
                                                  Read
                                        </option>
                                        <option
                                                  value="none">
                                                  None
                                        </option>
                              </select>
                    </div>
          </div>
          <div
                    className="book-title" />
          <div
                    className="book-authors" />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="book">
          <div
                    className="book-top">
                    <div
                              className="book-cover"
                              style={
                                        Object {
                                                  "backgroundImage": "url()",
                                                }
                              } />
                    <div
                              className="book-shelf-changer">
                              <select
                                        onChange={[Function]}
                                        value="none">
                                        <option
                                                  disabled={true}
                                                  value="none">
                                                  Move to...
                                        </option>
                                        <option
                                                  value="currentlyReading">
                                                  Currently Reading
                                        </option>
                                        <option
                                                  value="wantToRead">
                                                  Want to Read
                                        </option>
                                        <option
                                                  value="read">
                                                  Read
                                        </option>
                                        <option
                                                  value="none">
                                                  None
                                        </option>
                              </select>
                    </div>
          </div>
          <div
                    className="book-title" />
          <div
                    className="book-authors" />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Book
    book={
        Object {
            "imageLinks": Object {
              "thumbnail": "",
            },
            "subtitle": "",
            "title": "",
          }
    }
    updateShelfBook={[Function]} />,
}
`;
